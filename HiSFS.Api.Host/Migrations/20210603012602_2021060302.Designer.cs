// <auto-generated />
using System;
using HiSFS.Api.Host.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HiSFS.Api.Host.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20210603012602_2021060302")]
    partial class _2021060302
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HiSFS.Api.Shared.Models.BOM_정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("모품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LOSS율")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("모규격")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("모품명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("모품목재고단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("사용여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("시작일자")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("외주구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("임가공구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("자규격")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("자품명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("자품목재고단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("자품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("정미수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("종료일자")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("주거래처명")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("주거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("필요수량")
                        .HasColumnType("decimal(17,6)");

                    b.HasKey("회사코드", "모품번", "순번");

                    b.ToTable("BOM_정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.BOM정보", b =>
                {
                    b.Property<int>("BOM순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("로스율")
                        .HasColumnType("decimal(7,3)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("상위BOM순번")
                        .HasColumnType("int");

                    b.Property<decimal>("정미수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("품목코드")
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("필요수량")
                        .HasColumnType("decimal(7,3)");

                    b.HasKey("BOM순번");

                    b.HasIndex("상위BOM순번");

                    b.HasIndex("품목코드");

                    b.ToTable("BOM정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.BOM품목정보", b =>
                {
                    b.Property<string>("BOM품목정보코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("로스율")
                        .HasColumnType("decimal(7,3)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("정미수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("품목구분코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("필요수량")
                        .HasColumnType("decimal(7,3)");

                    b.HasKey("BOM품목정보코드");

                    b.ToTable("BOM품목정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.BOM품목정보상세", b =>
                {
                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BOM품목정보코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정단위정보공정단위코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("레벨")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("필요수량")
                        .HasColumnType("decimal(7,3)");

                    b.HasKey("품목코드", "BOM품목정보코드");

                    b.HasIndex("BOM품목정보코드");

                    b.HasIndex("공정단위정보공정단위코드");

                    b.HasIndex("공정단위코드");

                    b.ToTable("BOM품목정보상세");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.거래처정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("거래2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("거래3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("거래4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("거래5")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("거래처구분명")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("거래처구분코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처명")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("거래처약칭")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("공급가격")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("담당자")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("담당자연락처")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("대표연락처")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("등록번호")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("업태")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("이메일")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("종목")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("주소")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("주소2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("팩스및비고")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("화물도착지")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("회사코드", "거래처코드");

                    b.HasIndex("거래처구분코드");

                    b.ToTable("거래처정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위검사장비", b =>
                {
                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("검사장비식별번호")
                        .HasColumnType("int");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("공정단위코드", "품질검사코드", "검사장비식별번호");

                    b.HasIndex("검사장비식별번호");

                    b.HasIndex("회사코드");

                    b.ToTable("공정단위검사장비");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위검사정보", b =>
                {
                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("검사기준값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("검사단위코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("검사측정값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("오차범위")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("오차범위상한")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("오차범위하한")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("합격여부")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("공정단위코드", "품질검사코드");

                    b.HasIndex("검사단위코드");

                    b.HasIndex("품질검사코드");

                    b.HasIndex("회사코드");

                    b.ToTable("공정단위검사정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위설비정보", b =>
                {
                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("설비코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("공정단위코드", "설비코드");

                    b.HasIndex("회사코드", "설비코드");

                    b.ToTable("공정단위설비정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위자재정보", b =>
                {
                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("자재코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("공정단위코드", "자재코드");

                    b.HasIndex("자재코드");

                    b.HasIndex("회사코드");

                    b.ToTable("공정단위자재정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위정보", b =>
                {
                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정단위명")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("공정예상시간")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("공정코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("공정품유형코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("공정품코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("관리차수")
                        .HasColumnType("int");

                    b.Property<string>("도면코드")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("비고")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("완제품코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("원공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("공정단위코드");

                    b.HasIndex("공정코드");

                    b.HasIndex("공정품유형코드");

                    b.HasIndex("공정품코드");

                    b.HasIndex("도면코드");

                    b.HasIndex("완제품코드");

                    b.HasIndex("회사코드");

                    b.HasIndex("원공정단위코드", "관리차수")
                        .IsUnique()
                        .HasFilter("[원공정단위코드] IS NOT NULL");

                    b.ToTable("공정단위정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정불량정보", b =>
                {
                    b.Property<int>("인덱스")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("공정차수")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("불량유형")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산지시명")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("생산지시코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산품공정코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("생산품코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("설비코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("작업일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("작업자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("인덱스");

                    b.HasIndex("공정단위코드");

                    b.HasIndex("불량유형");

                    b.HasIndex("생산지시코드");

                    b.HasIndex("생산품공정코드");

                    b.HasIndex("생산품코드");

                    b.HasIndex("회사코드", "설비코드");

                    b.HasIndex("회사코드", "작업자사번");

                    b.ToTable("공정불량정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정이력상세정보", b =>
                {
                    b.Property<int>("인덱스")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정상태")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("공정이력인덱스")
                        .HasColumnType("int");

                    b.Property<decimal>("불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("생산수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<DateTime?>("시작타임")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("자재불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<DateTime?>("종료타임")
                        .HasColumnType("datetime2");

                    b.HasKey("인덱스");

                    b.HasIndex("공정이력인덱스");

                    b.ToTable("공정이력상세정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정이력정보", b =>
                {
                    b.Property<int>("인덱스")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("공정상태")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("공정차수")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("목표수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("생산수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("생산지시명")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("생산지시코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산품공정코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("생산품코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("설비코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("시작일")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("완료목표일")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("자재불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("작업일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("작업자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("인덱스");

                    b.HasIndex("공정단위코드");

                    b.HasIndex("생산지시코드");

                    b.HasIndex("생산품공정코드");

                    b.HasIndex("생산품코드");

                    b.HasIndex("회사코드", "설비코드");

                    b.HasIndex("회사코드", "작업자사번");

                    b.ToTable("공정이력정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정정보", b =>
                {
                    b.Property<string>("공정코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정명")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("공정유형코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("설비사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("설비유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("공정코드");

                    b.HasIndex("공정유형코드");

                    b.HasIndex("설비유형코드");

                    b.ToTable("공정정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공통코드", b =>
                {
                    b.Property<string>("코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("뎁스")
                        .HasColumnType("int");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("상위코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("설명")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("인자1")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("인자2")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("인자3")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("정렬순번")
                        .HasColumnType("int");

                    b.Property<string>("코드명")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("코드영문명")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("코드유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("코드");

                    b.HasIndex("상위코드");

                    b.HasIndex("코드명")
                        .IsUnique()
                        .HasFilter("[코드명] IS NOT NULL");

                    b.HasIndex("코드유형코드");

                    b.ToTable("공통코드");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.도면정보", b =>
                {
                    b.Property<string>("도면코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("개요")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("관리차수")
                        .HasColumnType("int");

                    b.Property<string>("도면명")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("도면번호")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("도면영문명")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("도면종류코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("설명")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("원도면코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("파일폴더순번")
                        .HasColumnType("int");

                    b.HasKey("도면코드");

                    b.HasIndex("도면종류코드");

                    b.HasIndex("파일폴더순번");

                    b.ToTable("도면정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메뉴부서권한정보", b =>
                {
                    b.Property<int>("메뉴순번")
                        .HasColumnType("int");

                    b.Property<string>("부서코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("등록권한")
                        .HasColumnType("bit");

                    b.Property<bool?>("변경권한")
                        .HasColumnType("bit");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool?>("삭제권한")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("읽기권한")
                        .HasColumnType("bit");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("메뉴순번", "부서코드");

                    b.HasIndex("회사코드", "부서코드");

                    b.ToTable("메뉴부서권한정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메뉴유형별권한정보", b =>
                {
                    b.Property<int>("메뉴순번")
                        .HasColumnType("int");

                    b.Property<string>("권한유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("등록권한")
                        .HasColumnType("bit");

                    b.Property<bool?>("변경권한")
                        .HasColumnType("bit");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool?>("삭제권한")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("읽기권한")
                        .HasColumnType("bit");

                    b.HasKey("메뉴순번", "권한유형코드");

                    b.HasIndex("권한유형코드");

                    b.ToTable("메뉴유형별권한정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메뉴정보", b =>
                {
                    b.Property<int>("순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("경로명")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("뎁스")
                        .HasColumnType("int");

                    b.Property<string>("메뉴명")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("상위메뉴순번")
                        .HasColumnType("int");

                    b.Property<int>("정렬순번")
                        .HasColumnType("int");

                    b.Property<string>("클래스명")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("순번");

                    b.HasIndex("상위메뉴순번");

                    b.ToTable("메뉴정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메뉴직원권한정보", b =>
                {
                    b.Property<int>("메뉴순번")
                        .HasColumnType("int");

                    b.Property<string>("직원사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("등록권한")
                        .HasColumnType("bit");

                    b.Property<bool?>("변경권한")
                        .HasColumnType("bit");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool?>("삭제권한")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("읽기권한")
                        .HasColumnType("bit");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("메뉴순번", "직원사번");

                    b.HasIndex("회사코드", "직원사번");

                    b.ToTable("메뉴직원권한정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메시지정보", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("메시지")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("메시지명")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("메시지유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("메시지확인유무")
                        .HasColumnType("bit");

                    b.Property<string>("발송인사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("수신인사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("전체메시지유무")
                        .HasColumnType("bit");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("메시지유형코드");

                    b.HasIndex("회사코드", "발송인사번");

                    b.HasIndex("회사코드", "수신인사번");

                    b.ToTable("메시지정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.물류담당자정보", b =>
                {
                    b.Property<int>("물류담당자번호")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("담당그룹명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("담당그룹코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("담당자명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("담당자코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("사용여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사원명")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("시작일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("전화번호")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("종료일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("팩스번호")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("핸드폰번호")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("물류담당자번호");

                    b.ToTable("물류담당자정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.바코드발급정보", b =>
                {
                    b.Property<int>("발급순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("생성일자")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("수량")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("입고유무")
                        .HasColumnType("bit");

                    b.Property<string>("입고일자")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("발급순번");

                    b.HasIndex("품목코드");

                    b.HasIndex("회사코드");

                    b.ToTable("바코드발급정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서별수입검사", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("발주서번호")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("발주번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("발주순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("거래처명")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("검사구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("검사수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("공급가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("과세구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("과세구분명")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("관리구분명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("관리구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("관리단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("규격")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("납기일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("담당자명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("담당자코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("발주단가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal>("발주수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("발주완료유무")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("발주일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal>("부가세")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("부가세구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("비고")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("비고_내역")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("수입검사완료유무")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("시작일")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("실적수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("실행상태코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("입고여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("종료일")
                        .HasColumnType("datetime2");

                    b.Property<string>("출하예정일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("품명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("품질검사완료여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("프로젝트")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("프록젝트명")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("합격수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("합계액")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("환종")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("회사코드", "발주서번호", "발주번호", "발주순번");

                    b.ToTable("발주서별수입검사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서별품질검사장비", b =>
                {
                    b.Property<string>("발주번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("발주순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<int?>("검사장비식별번호")
                        .HasColumnType("int");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("발주번호", "발주순번", "검사장비식별번호");

                    b.HasIndex("검사장비식별번호");

                    b.HasIndex("회사코드");

                    b.ToTable("발주서별품질검사장비");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서별품질검사정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("발주번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("발주순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("검사기준값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("검사단위코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("검사측정값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("오차범위")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("오차범위상한")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("오차범위하한")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("합격여부")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("회사코드", "발주번호", "발주순번", "품질검사코드");

                    b.HasIndex("검사단위코드");

                    b.HasIndex("품질검사코드");

                    b.ToTable("발주서별품질검사정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서별품질검사측정정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("시리얼넘버")
                        .HasColumnType("int");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("발주번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("발주순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("검사기준값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("검사단위코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("검사측정값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("보유품목코드1")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("보유품목회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산품공정명")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("생산품공정코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("오차범위")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("합격여부")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("회사코드", "시리얼넘버", "품질검사코드", "발주번호", "발주순번");

                    b.HasIndex("검사단위코드");

                    b.HasIndex("품질검사코드");

                    b.HasIndex("보유품목회사코드", "보유품목코드1");

                    b.ToTable("발주서별품질검사측정정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("발주번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("발주순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("거래처명")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("검사구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("공급가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("과세구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("과세구분명")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("관리구분명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("관리구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("관리단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("규격")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("납기일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("담당자명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("담당자코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("발주단가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<int>("발주서번호")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("발주수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("발주완료유무")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("발주일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal>("부가세")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("부가세구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("비고")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("비고_내역")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("출하예정일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("품명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("프로젝트")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("프록젝트명")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("합계액")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("환종")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("회사코드", "발주번호", "발주순번");

                    b.ToTable("발주서정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서헤더정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("발주번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("거래처명")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("과세구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("과세구분명")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("담당자명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("발주일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("회사코드", "발주번호");

                    b.ToTable("발주서헤더정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주정보", b =>
                {
                    b.Property<int>("발주순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처코드1")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("발주상태코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("발주서명")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("발주일시")
                        .HasColumnType("datetime2");

                    b.Property<string>("비고")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("입고예정일시")
                        .HasColumnType("datetime2");

                    b.HasKey("발주순번", "회사코드");

                    b.HasIndex("거래처코드");

                    b.HasIndex("거래처회사코드", "거래처코드1");

                    b.ToTable("발주정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주정보상세", b =>
                {
                    b.Property<int>("발주순번")
                        .HasColumnType("int");

                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("발주상세순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("발주수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<int?>("발주정보발주순번")
                        .HasColumnType("int");

                    b.Property<string>("발주정보회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("입고수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("품목구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("발주순번", "품목코드");

                    b.HasIndex("발주순번");

                    b.HasIndex("품목구분코드");

                    b.HasIndex("품목코드");

                    b.HasIndex("발주정보발주순번", "발주정보회사코드");

                    b.ToTable("발주정보상세");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목검사정보", b =>
                {
                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검사결과코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("불량유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("측정값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<bool>("측정유무")
                        .HasColumnType("bit");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("보유품목코드", "품질검사코드");

                    b.HasIndex("검사결과코드");

                    b.HasIndex("불량유형코드");

                    b.HasIndex("품질검사코드");

                    b.HasIndex("공정단위코드", "품질검사코드");

                    b.HasIndex("회사코드", "보유품목코드");

                    b.ToTable("보유품목검사정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목불량정보", b =>
                {
                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("불량유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("불량등록일시")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("불량변경일시")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("보유품목코드", "불량유형코드");

                    b.HasIndex("불량유형코드");

                    b.HasIndex("회사코드", "보유품목코드");

                    b.ToTable("보유품목불량정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목삭제일지", b =>
                {
                    b.Property<string>("보유품목일지코드")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("보유년월일")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("보유일")
                        .HasColumnType("datetime2");

                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산년월일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<int>("순번")
                        .HasColumnType("int");

                    b.Property<string>("출고년월일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("보유품목일지코드");

                    b.HasIndex("회사코드", "보유품목코드");

                    b.ToTable("보유품목삭제일지");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목위치정보", b =>
                {
                    b.Property<int>("보유품목위치순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("보유품목정보보유품목코드")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("보유품목정보회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("위치상세정보위치상세코드")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("위치상세정보회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("위치상세코드")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("장소위치정보장소위치코드")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("장소위치정보회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("장소위치코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("보유품목위치순번");

                    b.HasIndex("보유품목정보회사코드", "보유품목정보보유품목코드");

                    b.HasIndex("위치상세정보회사코드", "위치상세정보위치상세코드");

                    b.HasIndex("장소위치정보회사코드", "장소위치정보장소위치코드");

                    b.HasIndex("회사코드", "보유품목코드");

                    b.HasIndex("회사코드", "장소위치코드");

                    b.ToTable("보유품목위치정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목이력", b =>
                {
                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("이력순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("변경사유")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("변경수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("변경유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("변경일시")
                        .HasColumnType("datetime2");

                    b.Property<string>("보유품목정보보유품목코드")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("보유품목정보회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("연계보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("위치상세코드")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("유형사유")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("장소위치코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("장소코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("보유품목코드", "이력순번");

                    b.HasIndex("변경유형코드");

                    b.HasIndex("보유품목정보회사코드", "보유품목정보보유품목코드");

                    b.HasIndex("회사코드", "연계보유품목코드");

                    b.HasIndex("회사코드", "장소위치코드");

                    b.HasIndex("회사코드", "장소코드");

                    b.ToTable("보유품목이력");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목일련정보", b =>
                {
                    b.Property<string>("보유년월일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("순번")
                        .HasColumnType("int");

                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처코드1")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("보유명")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("보유일")
                        .HasColumnType("datetime2");

                    b.Property<string>("보유품목일지코드")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산년월일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("생산지시코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("일년번호")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("출고년월일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("보유년월일", "순번", "품목코드");

                    b.HasIndex("거래처코드");

                    b.HasIndex("보유품목일지코드");

                    b.HasIndex("생산지시코드");

                    b.HasIndex("품목코드");

                    b.HasIndex("거래처회사코드", "거래처코드1");

                    b.ToTable("보유품목일련정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목일지", b =>
                {
                    b.Property<string>("보유품목일지코드")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처코드1")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("보유년월일")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("보유일")
                        .HasColumnType("datetime2");

                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산년월일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<int>("순번")
                        .HasColumnType("int");

                    b.Property<string>("출고년월일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("보유품목일지코드");

                    b.HasIndex("보유품목일지코드");

                    b.HasIndex("품목코드");

                    b.HasIndex("거래처회사코드", "거래처코드1");

                    b.HasIndex("회사코드", "보유품목코드");

                    b.ToTable("보유품목일지");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목임시위치정보", b =>
                {
                    b.Property<int>("보유품목위치순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("기타")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사유")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("위치상세코드")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("장소위치코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("지시서")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("보유품목위치순번");

                    b.HasIndex("위치상세코드");

                    b.ToTable("보유품목임시위치정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("보유년월일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("보유명")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("보유일")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("설비가동현황코드")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("설비가동현황회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<int>("순번")
                        .HasColumnType("int");

                    b.Property<decimal>("실제수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("장소위치코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("장소코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("조정년월일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("품목구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("회사코드", "보유품목코드");

                    b.HasIndex("품목구분코드");

                    b.HasIndex("설비가동현황회사코드", "설비가동현황코드");

                    b.HasIndex("회사코드", "장소위치코드");

                    b.HasIndex("회사코드", "장소코드");

                    b.HasIndex("품목코드", "보유년월일", "순번");

                    b.ToTable("보유품목정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.부서정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("부문명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("부문코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("부서명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("선택가능유무")
                        .HasColumnType("bit");

                    b.Property<string>("연계부서코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("정렬순번")
                        .HasColumnType("int");

                    b.HasKey("회사코드", "부서코드");

                    b.ToTable("부서정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.사업장", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("사업장명")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("회사코드");

                    b.ToTable("사업장");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.사용자재보고정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("작업순번")
                        .HasColumnType("decimal(3,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PDA번호")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("관리내역코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("비고_보조언어")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("사용공정")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("사용수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal>("사용순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("사용여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("사용일자")
                        .HasColumnType("datetime2");

                    b.Property<string>("사용작업장")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("소요자재순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("수정IP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("수정사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("수정일")
                        .HasColumnType("datetime2");

                    b.Property<string>("실적번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("외부연동작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("유무상구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("유효여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("작업일자")
                        .HasColumnType("datetime2");

                    b.Property<string>("지시구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("지시번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("지시전개순번")
                        .HasColumnType("decimal(3,0)");

                    b.Property<string>("최초입력IP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("최초입력사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("최초입력일")
                        .HasColumnType("datetime2");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("프로젝트코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("회사코드", "작업번호", "작업순번");

                    b.ToTable("사용자재보고정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획구매정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토기록")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("검토기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("계획기록")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("계획기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("계획자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("전달사항")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("회사코드", "생산계획코드");

                    b.HasIndex("회사코드", "검토자사번");

                    b.HasIndex("회사코드", "계획자사번");

                    b.ToTable("생산계획구매정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획기본정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토기록")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("검토기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("계획기록")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("계획기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("계획자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("전달사항")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("회사코드", "생산계획코드");

                    b.HasIndex("회사코드", "검토자사번");

                    b.HasIndex("회사코드", "계획자사번");

                    b.ToTable("생산계획기본정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획생산관리정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토기록")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("검토기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("계획기록")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("계획기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("계획자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("전달사항")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("회사코드", "생산계획코드");

                    b.HasIndex("회사코드", "검토자사번");

                    b.HasIndex("회사코드", "계획자사번");

                    b.ToTable("생산계획생산관리정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획생산정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토기록")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("검토기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("계획기록")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("계획기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("계획자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("전달사항")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("회사코드", "생산계획코드");

                    b.HasIndex("회사코드", "검토자사번");

                    b.HasIndex("회사코드", "계획자사번");

                    b.ToTable("생산계획생산정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획연구소정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토기록")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("검토기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("계획기록")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("계획기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("계획자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("전달사항")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("회사코드", "생산계획코드");

                    b.HasIndex("회사코드", "검토자사번");

                    b.HasIndex("회사코드", "계획자사번");

                    b.ToTable("생산계획연구소정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획영업정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토기록")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("검토기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("계획기록")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("계획기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("계획자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("전달사항")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("회사코드", "생산계획코드");

                    b.HasIndex("회사코드", "검토자사번");

                    b.HasIndex("회사코드", "계획자사번");

                    b.ToTable("생산계획영업정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("계획수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<DateTime?>("납품일")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("발주수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<DateTime?>("발주일")
                        .HasColumnType("datetime2");

                    b.Property<string>("발주처거래처코드")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("발주처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("발주처회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산계획구매생산계획코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산계획구매회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획기본생산계획코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산계획기본회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획명")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("생산계획상태코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("생산계획생산관리생산계획코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산계획생산관리회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획생산생산계획코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산계획생산회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획연구소생산계획코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산계획연구소회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획영업생산계획코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산계획영업회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획품질생산계획코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산계획품질회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("생산책임자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("생산품공정코드")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("생산품코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("실행일시")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("종료일시")
                        .HasColumnType("datetime2");

                    b.Property<string>("주문번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("회사코드", "생산계획코드");

                    b.HasIndex("발주처코드");

                    b.HasIndex("생산계획상태코드");

                    b.HasIndex("생산유형코드");

                    b.HasIndex("생산품공정코드");

                    b.HasIndex("생산품코드");

                    b.HasIndex("발주처회사코드", "발주처거래처코드");

                    b.HasIndex("생산계획구매회사코드", "생산계획구매생산계획코드");

                    b.HasIndex("생산계획기본회사코드", "생산계획기본생산계획코드");

                    b.HasIndex("생산계획생산관리회사코드", "생산계획생산관리생산계획코드");

                    b.HasIndex("생산계획생산회사코드", "생산계획생산생산계획코드");

                    b.HasIndex("생산계획연구소회사코드", "생산계획연구소생산계획코드");

                    b.HasIndex("생산계획영업회사코드", "생산계획영업생산계획코드");

                    b.HasIndex("생산계획품질회사코드", "생산계획품질생산계획코드");

                    b.HasIndex("회사코드", "생산책임자사번");

                    b.ToTable("생산계획정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획품질정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토기록")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("검토기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("검토자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("계획기록")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("계획기록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("계획자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("전달사항")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("회사코드", "생산계획코드");

                    b.HasIndex("회사코드", "검토자사번");

                    b.HasIndex("회사코드", "계획자사번");

                    b.ToTable("생산계획품질정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산실적상세정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산지시코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("작업순번")
                        .HasColumnType("int");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("부서코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("비고")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("사용수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사용품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("실적등록일")
                        .HasColumnType("datetime2");

                    b.Property<string>("일괄생산등록유무")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("작업자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("주문번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("주문순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("회사코드", "생산지시코드", "작업순번");

                    b.HasIndex("회사코드", "작업자사번");

                    b.ToTable("생산실적상세정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산실적헤더정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산지시코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOTNO")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산지시명")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("생산품공정코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("생산품코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("실적공정코드_창고코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("실적수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("실적작업장코드_장소코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("일괄생산등록유무")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("재작업여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("주문번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("회사코드", "생산지시코드");

                    b.HasIndex("공정단위코드");

                    b.HasIndex("생산품공정코드");

                    b.HasIndex("생산품코드");

                    b.ToTable("생산실적헤더정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산지시공정차수정보", b =>
                {
                    b.Property<string>("생산지시코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("공정차수")
                        .HasColumnType("int");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("비고")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("생산품공정차수순번")
                        .HasColumnType("int");

                    b.Property<string>("생산품공정코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("작업자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("생산지시코드", "공정차수");

                    b.HasIndex("생산품공정코드", "생산품공정차수순번");

                    b.HasIndex("회사코드", "작업자사번");

                    b.ToTable("생산지시공정차수");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산지시정보", b =>
                {
                    b.Property<string>("생산지시코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("검사수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("비고")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산계획정보생산계획코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산계획정보회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("생산계획코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("생산수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("생산지시명")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("생산지시유형코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("순번")
                        .HasColumnType("int");

                    b.Property<DateTime?>("시작일")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("실생산량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("실행상태코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("완료목표일")
                        .HasColumnType("datetime2");

                    b.Property<string>("재작업여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("합격수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("생산지시코드");

                    b.HasIndex("생산지시유형코드");

                    b.HasIndex("실행상태코드");

                    b.HasIndex("생산계획정보회사코드", "생산계획정보생산계획코드");

                    b.HasIndex("생산계획코드", "순번")
                        .IsUnique()
                        .HasFilter("[생산계획코드] IS NOT NULL");

                    b.HasIndex("회사코드", "생산계획코드");

                    b.ToTable("생산지시정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산품공정정보", b =>
                {
                    b.Property<string>("생산품공정코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("관리차수")
                        .HasColumnType("int");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산품공정명")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("생산품코드")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("생산품공정코드");

                    b.HasIndex("회사코드");

                    b.HasIndex("생산품코드", "관리차수")
                        .IsUnique();

                    b.ToTable("생산품공정정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산품공정차수정보", b =>
                {
                    b.Property<string>("생산품공정코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("순번")
                        .HasColumnType("int");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정단위정보공정단위코드")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("공정단위코드")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("공정차수")
                        .HasColumnType("int");

                    b.Property<string>("비고")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("생산품공정코드", "순번");

                    b.HasIndex("공정단위정보공정단위코드");

                    b.HasIndex("공정단위코드");

                    b.HasIndex("회사코드");

                    b.ToTable("생산품공정차수정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.설비가동현황정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("상태")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("상태변경시각")
                        .HasColumnType("datetime2");

                    b.Property<long>("상태유지시간Ticks")
                        .HasColumnType("bigint");

                    b.Property<string>("상태유형코드")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("설비코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("이전상태")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("회사코드", "코드");

                    b.HasIndex("상태유형코드");

                    b.HasIndex("회사코드", "설비코드");

                    b.ToTable("설비가동현황정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.액션로그", b =>
                {
                    b.Property<long>("순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("액션시각")
                        .HasColumnType("datetime2");

                    b.Property<string>("액션인자")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("액션코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("연동장비식별번호")
                        .HasColumnType("int");

                    b.Property<string>("직원사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("순번");

                    b.HasIndex("액션코드");

                    b.HasIndex("연동장비식별번호");

                    b.HasIndex("회사코드", "순번");

                    b.HasIndex("회사코드", "직원사번");

                    b.ToTable("액션로그");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.액션정보", b =>
                {
                    b.Property<string>("액션코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("대체액션코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("변경액션유무")
                        .HasColumnType("bit");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("액션명")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("액션유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("액션인자")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("액션인자설명")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("액션코드");

                    b.HasIndex("대체액션코드");

                    b.HasIndex("액션유형코드");

                    b.ToTable("액션정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.연동장비정보", b =>
                {
                    b.Property<int>("식별번호")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("등록시각")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("승인시각")
                        .HasColumnType("datetime2");

                    b.Property<string>("식별코드")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("에이전트명")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("연동장비유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("장비명")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("테스트")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("식별번호");

                    b.HasIndex("연동장비유형코드");

                    b.ToTable("연동장비정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주생산위치정보", b =>
                {
                    b.Property<int>("보유품목위치순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("기타")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사유")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("위치상세코드")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("장소위치코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("지시서")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("보유품목위치순번");

                    b.HasIndex("장소위치코드");

                    b.ToTable("외주생산위치정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주작업지시서정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("지시번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("전개순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래처명")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("거래처약칭")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("검사구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("검사구분명")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("공정")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("공정명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("관리단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("규격")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("비고_DOC_DC")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산외주구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("생산외주구분명")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("설비명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("설비코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<DateTime?>("완료일")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("외주금액")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal>("외주단가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("작업장")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업장명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("작업조")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("작업조명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("작업팀")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("작업팀명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("주문번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("주문순번")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("지시구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("지시구분명")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("지시상태")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("지시상태명")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("지시일")
                        .HasColumnType("datetime2");

                    b.Property<string>("처리구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("처리구분명")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("품명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("회사코드", "지시번호", "전개순번");

                    b.ToTable("외주작업지시서정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주작업지시서품검정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("지시번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("전개순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래처명")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("거래처약칭")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("검사구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("검사구분명")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal>("검사수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("공정")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("공정명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("관리단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("규격")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("비고_DOC_DC")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("생산수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("생산외주구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("생산외주구분명")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("설비명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("설비코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<DateTime?>("시작일")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("실생산량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("실행상태코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("완료일")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("외주금액")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal>("외주단가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("작업장")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업장명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("작업조")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("작업조명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("작업팀")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("작업팀명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("종료일")
                        .HasColumnType("datetime2");

                    b.Property<string>("주문번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("주문순번")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("지시구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("지시구분명")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("지시상태")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("지시상태명")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("지시일")
                        .HasColumnType("datetime2");

                    b.Property<string>("처리구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("처리구분명")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("품명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("품질검사완료여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("합격수량")
                        .HasColumnType("decimal(7,3)");

                    b.HasKey("회사코드", "지시번호", "전개순번");

                    b.ToTable("외주작업지시서품검정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주작업지시헤더정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("지시번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("공정명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산외주구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("생산외주구분명")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal>("전개순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("지시구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("지시구분명")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("품명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("회사코드", "지시번호");

                    b.ToTable("외주작업지시헤더정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주지시별검사정보", b =>
                {
                    b.Property<string>("지시번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("검사기준값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("검사단위코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("검사측정값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("오차범위")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("오차범위상한")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("오차범위하한")
                        .HasColumnType("decimal(7,3)");

                    b.Property<decimal>("전개순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("합격여부")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("지시번호", "품질검사코드");

                    b.HasIndex("검사단위코드");

                    b.HasIndex("품질검사코드");

                    b.HasIndex("회사코드");

                    b.ToTable("외주지시별검사정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주지시별품질검사장비", b =>
                {
                    b.Property<string>("지시번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("검사장비식별번호")
                        .HasColumnType("int");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("지시번호", "검사장비식별번호");

                    b.HasIndex("검사장비식별번호");

                    b.HasIndex("회사코드");

                    b.HasIndex("지시번호", "품질검사코드");

                    b.ToTable("외주지시별품질검사장비");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주품질검사측정정보", b =>
                {
                    b.Property<int>("시리얼넘버")
                        .HasColumnType("int");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("지시번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("검사기준값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("검사단위코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("검사측정값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("보유품목코드1")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("보유품목회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산품공정명")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("생산품공정코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("오차범위")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("합격여부")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("시리얼넘버", "품질검사코드", "지시번호");

                    b.HasIndex("검사단위코드");

                    b.HasIndex("품질검사코드");

                    b.HasIndex("회사코드");

                    b.HasIndex("보유품목회사코드", "보유품목코드1");

                    b.ToTable("외주품질검사측정정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.위치상세정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("위치상세코드")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("상세코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("위치명")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("위치분류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("위치상세분류코드")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("장소위치코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("회사코드", "위치상세코드");

                    b.HasIndex("위치상세분류코드");

                    b.HasIndex("회사코드", "장소위치코드");

                    b.ToTable("위치상세정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.일괄생산실적상세정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("작업순번")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOTNO")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("사용공정_사용창고")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("사용수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사용작업장_사용장소")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("사용품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("실적번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("실적순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("창고구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("회사코드", "작업번호", "작업순번");

                    b.ToTable("일괄생산실적상세정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.일괄생산실적헤더정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOTNO")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("관리구분")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("설비코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("실적공정코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("실적공정코드_창고코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("실적구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("실적번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("실적수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<DateTime?>("실적일자")
                        .HasColumnType("datetime2");

                    b.Property<string>("실적작업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("실적작업장코드_장소코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("실적품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("작업일자")
                        .HasColumnType("datetime2");

                    b.Property<string>("작업자코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("재작업여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("프로젝트코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("회사코드", "작업번호");

                    b.ToTable("일괄생산실적헤더정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.입고처리상세정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("작업순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("공급가")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("단가구분")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("발주번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("발주순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<decimal?>("부가세")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("비고")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("사용여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("선적번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("선적순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<decimal?>("외화금액")
                        .HasColumnType("decimal(17,4)");

                    b.Property<decimal?>("외화단가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("유효여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal?>("입고단가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("입고번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("입고수량_관리단위")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal>("입고수량_재고단위")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal?>("입고순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("입고의뢰번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("입고의뢰순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("입고장소코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("합계액")
                        .HasColumnType("decimal(17,4)");

                    b.Property<decimal?>("환율")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("환종")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("회사코드", "작업번호", "작업순번");

                    b.ToTable("입고처리상세정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.입고처리헤더정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("APP_FG")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DUMMY1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DUMMY2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DUMMY3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EXCST_NB")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LC여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PLN_CD")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("SO_NB3")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("UMVAT_FG")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("과세구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("관리구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("발주번호")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("배부여부")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("수정IP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("수정사원코드")
                        .HasMaxLength(19)
                        .HasColumnType("nvarchar(19)");

                    b.Property<DateTime?>("수정일")
                        .HasColumnType("datetime2");

                    b.Property<string>("입고구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("입고번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("입고일자")
                        .HasColumnType("datetime2");

                    b.Property<string>("입고장소")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("입고창고")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("작업일자")
                        .HasColumnType("datetime2");

                    b.Property<string>("최초입력IP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("최초입력사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("최초입력일")
                        .HasColumnType("datetime2");

                    b.Property<string>("프로젝트코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("환율")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("환종")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("회사코드", "작업번호");

                    b.ToTable("입고처리헤더정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.작업외주생산실적등록정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PDA번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PDA아이디")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검사구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("부산물여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("부산물품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("불량유형코드")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("설비코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("수정IP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("수정사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("수정일")
                        .HasColumnType("datetime2");

                    b.Property<string>("실적공정코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("실적구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("실적번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("실적수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<DateTime?>("실적일자")
                        .HasColumnType("datetime2");

                    b.Property<string>("실적작업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("이동공정_입고창고코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("이동작업장_입고장소코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("작업일자")
                        .HasColumnType("datetime2");

                    b.Property<string>("작업자코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("작업조코드")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("작업팀코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("재작업여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("주산물원천실적번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("지시구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("지시구분명")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("지시번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("지시전개순번")
                        .HasColumnType("decimal(3,0)");

                    b.Property<string>("처리구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("최초입력IP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("최초입력사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("최초입력일")
                        .HasColumnType("datetime2");

                    b.Property<string>("프로젝트코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("회사코드", "작업번호");

                    b.ToTable("작업외주생산실적등록정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.작업자생산실적정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("작업순번")
                        .HasColumnType("int");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("불량수량")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("비고")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("사용수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사용품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산지시명")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("생산지시코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("생산품코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("실적공정코드_창고코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("실적등록일")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("실적수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("실적작업장코드_장소코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("일괄생산등록유무")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("작업자사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("회사코드", "작업순번");

                    b.HasIndex("회사코드", "작업자사번");

                    b.ToTable("작업자생산실적정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.장소위치정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("장소위치코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("위치명")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("위치분류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("위치코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("장소코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("회사코드", "장소위치코드");

                    b.HasIndex("위치분류코드");

                    b.HasIndex("장소코드", "위치코드");

                    b.HasIndex("회사코드", "장소코드");

                    b.ToTable("장소위치정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.장소정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("장소코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("공정구분명")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("공정구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("장소명")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("장소사용여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("장소유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("회사코드", "장소코드");

                    b.HasIndex("공정구분코드");

                    b.HasIndex("장소유형코드");

                    b.ToTable("장소정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.재고이동상세정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("작업순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("APP_FG")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("관리구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("만료여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("모품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("사용여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("상세_비고")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("이동번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("이동수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal>("이동순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("재공운영여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("지시번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("청구수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal>("청구순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("프로젝트코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("회사코드", "작업번호", "작업순번");

                    b.ToTable("재고이동상세정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.재고이동헤더정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("APP_FG")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("담당자코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("부서코드")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사원코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("이동구분")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("이동번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("이동일자")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("입고공정_창고코드")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("입고작업장_장소코드")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("입고장소위치상세코드")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("입출고구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("작업일자")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("처리구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("출고장소위치상세코드")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("출고장소코드")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("출고창고코드")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("헤더비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("회사코드", "작업번호");

                    b.ToTable("재고이동헤더정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.재고조정정보", b =>
                {
                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래처")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처명")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("관리구분")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("관리구분명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("관리단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("규격")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("단가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("담당자명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("담당자코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("비고_건")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("비고_내역")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("장소명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("장소코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("조정구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("조정구분명")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal?>("조정금액")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("조정번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal?>("조정수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal?>("조정순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("조정일자")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("창고명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("창고코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("품명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("프로젝트명")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("프로젝트코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("환산계수")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.ToTable("재고조정정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.재고조정정보이력", b =>
                {
                    b.Property<string>("CO_CD")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("ADJUST_NB")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("ADJUST_SQ")
                        .HasColumnType("decimal(5,0)");

                    b.Property<decimal>("ADJUST_AM")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("ADJUST_DT")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ADJUST_FG")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ADJUST_FG_NM")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("ADJUST_UM")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ITEM_CD")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ITEM_DC")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ITEM_NM")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LC_CD")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("LC_NM")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LOT_NB")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MGMT_CD")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MGM_NM")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PJT_CD")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PJT_NM")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PLN_CD")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("PLN_NM")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("QT")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("REMARK_DC_D")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("REMARK_DC_H")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("TR_CD")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TR_NM")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("UNITCHNG_NB")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("UNITMANG_DC")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("UNIT_DC")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WH_CD")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("WH_NM")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CO_CD", "ADJUST_NB", "ADJUST_SQ");

                    b.ToTable("재고조정정보이력");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.재고조정품목정보", b =>
                {
                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LOT기본수량")
                        .HasColumnType("int");

                    b.Property<bool>("LOT여부")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처코드1")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("검사여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("계정구분코드")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("관리단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("관리차수")
                        .HasColumnType("int");

                    b.Property<string>("규격")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("규격종류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("단위코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("대분류명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("대분류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("비고")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("소분류명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("소분류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("소재코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("원품목코드")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("재고단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("조달구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("조달분류")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal?>("조정수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("중분류명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("중분류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("품목구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("품목명")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품목영문명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품목유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("환산계수")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("품목코드");

                    b.HasIndex("거래처코드");

                    b.HasIndex("규격종류코드");

                    b.HasIndex("단위코드");

                    b.HasIndex("소재코드");

                    b.HasIndex("조달구분코드");

                    b.HasIndex("품목구분코드");

                    b.HasIndex("품목유형코드");

                    b.HasIndex("회사코드");

                    b.HasIndex("거래처회사코드", "거래처코드1");

                    b.HasIndex("원품목코드", "관리차수")
                        .IsUnique();

                    b.ToTable("재고조정품목정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.주문서정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("주문번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SOV_AM")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("검사구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("고객명")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("고객코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("공급가")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("과세구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("과세구분명")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("관리구분명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("관리구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("관리단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("관리번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("규격")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("납기일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("납품처명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("납품처코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("단가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("단가구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("단가구분명")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("담당자명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("담당자코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("디테일비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("마감여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("부가세단가")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("수량")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("주문구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("주문서번호")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("주문완료유무")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("주문일자")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("출하예정일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("품목명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("프로젝트명")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("프로젝트코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("합계액")
                        .HasColumnType("decimal(17,4)");

                    b.Property<string>("헤더비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("환종")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("회사코드", "주문번호", "순번");

                    b.ToTable("주문서정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.주문서헤더정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("주문번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("고객명")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("과세구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("과세구분명")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("납품처명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("담당자명")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("주문구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("주문일자")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("회사코드", "주문번호");

                    b.ToTable("주문서헤더정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.직원권한정보", b =>
                {
                    b.Property<string>("식별인자")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("암호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("암호암호화유무")
                        .HasColumnType("bit");

                    b.Property<string>("회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("식별인자");

                    b.HasIndex("회사코드");

                    b.ToTable("직원권한정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.직원정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("사번")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("권한코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("부서코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사용자명")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("상세주소")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("식별번호")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("식별인자")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("연락처1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("연락처2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("이메일")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("입사일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("주소")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("직급코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("직책코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("퇴사일")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("회사코드", "사번");

                    b.HasIndex("권한코드");

                    b.HasIndex("식별번호")
                        .IsUnique()
                        .HasFilter("[식별번호] IS NOT NULL");

                    b.HasIndex("식별인자");

                    b.HasIndex("직급코드");

                    b.HasIndex("직책코드");

                    b.HasIndex("회사코드", "부서코드");

                    b.ToTable("직원정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.출고처리상세정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("작업순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("연동구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("장소코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("주문번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("주문순번")
                        .HasColumnType("decimal(5,0)");

                    b.Property<decimal>("출고수량_관리단위")
                        .HasColumnType("decimal(17,6)");

                    b.Property<decimal>("출고수량_재고단위")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("품번")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("회사코드", "작업번호", "작업순번");

                    b.ToTable("출고처리상세정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.출고처리헤더정보", b =>
                {
                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("작업번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("과세구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("납품처코드")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("단가구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("담당자코드")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("부서코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("비고")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("사업장코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<string>("사원코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("연동구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("작업일자")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("주문번호")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("창고코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("출고구분")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("출고일자")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<decimal>("환율")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("환종")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("회사코드", "작업번호");

                    b.ToTable("출고처리헤더정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.파일정보", b =>
                {
                    b.Property<int>("순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("경로")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("설명")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("썸네일경로")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("임시경로")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("크기")
                        .HasColumnType("int");

                    b.Property<string>("파일이름")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("폴더순번")
                        .HasColumnType("int");

                    b.Property<string>("확장자")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("순번");

                    b.HasIndex("폴더순번");

                    b.ToTable("파일정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.파일폴더정보", b =>
                {
                    b.Property<int>("순번")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("폴더경로")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("폴더명")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("순번");

                    b.ToTable("파일폴더정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.품목정보", b =>
                {
                    b.Property<string>("품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LOT기본수량")
                        .HasColumnType("int");

                    b.Property<bool>("LOT여부")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("거래처코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처코드1")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("거래처회사코드")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("검사여부")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("계정구분코드")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("관리단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("관리차수")
                        .HasColumnType("int");

                    b.Property<string>("규격")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("규격종류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("단위코드")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("대분류명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("대분류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("비고")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("소분류명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("소분류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("소재코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("원품목코드")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("재고단위")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("조달구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("조달분류")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("중분류명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("중분류코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("품목구분코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("품목명")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품목영문명")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("품목유형코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("환산계수")
                        .HasColumnType("decimal(17,6)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("품목코드");

                    b.HasIndex("거래처코드");

                    b.HasIndex("규격종류코드");

                    b.HasIndex("단위코드");

                    b.HasIndex("소재코드");

                    b.HasIndex("조달구분코드");

                    b.HasIndex("품목구분코드");

                    b.HasIndex("품목유형코드");

                    b.HasIndex("회사코드");

                    b.HasIndex("거래처회사코드", "거래처코드1");

                    b.HasIndex("원품목코드", "관리차수")
                        .IsUnique();

                    b.ToTable("품목정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.품질검사정보", b =>
                {
                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("품질검사명")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("품질검사코드");

                    b.ToTable("품질검사정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.품질검사측정정보", b =>
                {
                    b.Property<int>("시리얼넘버")
                        .HasColumnType("int");

                    b.Property<string>("품질검사코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("생산지시코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOT번호")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("검사기준값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("검사단위코드")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("검사측정값")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("공정단위코드")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("보유품목코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("사용유무")
                        .HasColumnType("bit");

                    b.Property<bool>("삭제유무")
                        .HasColumnType("bit");

                    b.Property<string>("상세JSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("생산품공정명")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("생산품공정코드")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("오차범위")
                        .HasColumnType("decimal(7,3)");

                    b.Property<string>("품목_LOT번호")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("합격여부")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("회사코드")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("시리얼넘버", "품질검사코드", "생산지시코드");

                    b.HasIndex("검사단위코드");

                    b.HasIndex("품질검사코드");

                    b.HasIndex("회사코드");

                    b.ToTable("품질검사측정정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.BOM정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.BOM정보", "상위BOM")
                        .WithMany("하위BOM목록")
                        .HasForeignKey("상위BOM순번")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "품목")
                        .WithMany()
                        .HasForeignKey("품목코드");

                    b.Navigation("상위BOM");

                    b.Navigation("품목");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.BOM품목정보상세", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.BOM품목정보", "BOM품목정보")
                        .WithMany("S_BOM정보상세")
                        .HasForeignKey("BOM품목정보코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.공정단위정보", null)
                        .WithMany("S_BOM품목정보상세")
                        .HasForeignKey("공정단위정보공정단위코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "품목")
                        .WithMany()
                        .HasForeignKey("품목코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("품목");

                    b.Navigation("BOM품목정보");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.거래처정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "거래처구분")
                        .WithMany()
                        .HasForeignKey("거래처구분코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("거래처구분");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위검사장비", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.연동장비정보", "검사장비")
                        .WithMany()
                        .HasForeignKey("검사장비식별번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공정단위검사정보", "검사정보")
                        .WithMany("공정검사장비목록")
                        .HasForeignKey("공정단위코드", "품질검사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("검사장비");

                    b.Navigation("검사정보");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위검사정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "검사단위")
                        .WithMany()
                        .HasForeignKey("검사단위코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.공정단위정보", null)
                        .WithMany("공정검사목록")
                        .HasForeignKey("공정단위코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.품질검사정보", "품질검사")
                        .WithMany()
                        .HasForeignKey("품질검사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("검사단위");

                    b.Navigation("품질검사");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위설비정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공정단위정보", "공정단위")
                        .WithMany("공정설비목록")
                        .HasForeignKey("공정단위코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "설비")
                        .WithMany()
                        .HasForeignKey("회사코드", "설비코드");

                    b.Navigation("공정단위");

                    b.Navigation("설비");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위자재정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공정단위정보", "공정단위")
                        .WithMany("공정자재목록")
                        .HasForeignKey("공정단위코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "자재")
                        .WithMany()
                        .HasForeignKey("자재코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("공정단위");

                    b.Navigation("자재");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공정정보", "공정")
                        .WithMany()
                        .HasForeignKey("공정코드")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "공정품유형")
                        .WithMany()
                        .HasForeignKey("공정품유형코드")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "공정품")
                        .WithMany()
                        .HasForeignKey("공정품코드")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HiSFS.Api.Shared.Models.도면정보", "도면")
                        .WithMany()
                        .HasForeignKey("도면코드")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "완제품")
                        .WithMany()
                        .HasForeignKey("완제품코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("공정");

                    b.Navigation("공정품");

                    b.Navigation("공정품유형");

                    b.Navigation("도면");

                    b.Navigation("완제품");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정불량정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공정단위정보", "공정단위")
                        .WithMany()
                        .HasForeignKey("공정단위코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "공통")
                        .WithMany()
                        .HasForeignKey("불량유형");

                    b.HasOne("HiSFS.Api.Shared.Models.생산지시정보", "생산지시")
                        .WithMany()
                        .HasForeignKey("생산지시코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산품공정정보", "생산품공정")
                        .WithMany()
                        .HasForeignKey("생산품공정코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "생산품")
                        .WithMany()
                        .HasForeignKey("생산품코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "보유품목")
                        .WithMany()
                        .HasForeignKey("회사코드", "설비코드");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "작업자")
                        .WithMany()
                        .HasForeignKey("회사코드", "작업자사번");

                    b.Navigation("공정단위");

                    b.Navigation("공통");

                    b.Navigation("보유품목");

                    b.Navigation("생산지시");

                    b.Navigation("생산품");

                    b.Navigation("생산품공정");

                    b.Navigation("작업자");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정이력상세정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공정이력정보", "공정이력")
                        .WithMany()
                        .HasForeignKey("공정이력인덱스")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("공정이력");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정이력정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공정단위정보", "공정단위")
                        .WithMany()
                        .HasForeignKey("공정단위코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산지시정보", "생산지시")
                        .WithMany()
                        .HasForeignKey("생산지시코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산품공정정보", "생산품공정")
                        .WithMany()
                        .HasForeignKey("생산품공정코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "생산품")
                        .WithMany()
                        .HasForeignKey("생산품코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "보유품목")
                        .WithMany()
                        .HasForeignKey("회사코드", "설비코드");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "작업자")
                        .WithMany()
                        .HasForeignKey("회사코드", "작업자사번");

                    b.Navigation("공정단위");

                    b.Navigation("보유품목");

                    b.Navigation("생산지시");

                    b.Navigation("생산품");

                    b.Navigation("생산품공정");

                    b.Navigation("작업자");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "공정유형")
                        .WithMany()
                        .HasForeignKey("공정유형코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "설비유형")
                        .WithMany()
                        .HasForeignKey("설비유형코드");

                    b.Navigation("공정유형");

                    b.Navigation("설비유형");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공통코드", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "상위")
                        .WithMany("하위")
                        .HasForeignKey("상위코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "코드유형")
                        .WithMany()
                        .HasForeignKey("코드유형코드");

                    b.Navigation("상위");

                    b.Navigation("코드유형");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.도면정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "도면종류")
                        .WithMany()
                        .HasForeignKey("도면종류코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.파일폴더정보", "파일폴더")
                        .WithMany()
                        .HasForeignKey("파일폴더순번");

                    b.Navigation("도면종류");

                    b.Navigation("파일폴더");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메뉴부서권한정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.메뉴정보", "메뉴")
                        .WithMany("메뉴부서권한목록")
                        .HasForeignKey("메뉴순번")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.부서정보", "부서")
                        .WithMany()
                        .HasForeignKey("회사코드", "부서코드");

                    b.Navigation("메뉴");

                    b.Navigation("부서");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메뉴유형별권한정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "권한유형")
                        .WithMany()
                        .HasForeignKey("권한유형코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.메뉴정보", "메뉴")
                        .WithMany("메뉴유형별권한목록")
                        .HasForeignKey("메뉴순번")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("권한유형");

                    b.Navigation("메뉴");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메뉴정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.메뉴정보", "상위메뉴")
                        .WithMany("하위메뉴목록")
                        .HasForeignKey("상위메뉴순번");

                    b.Navigation("상위메뉴");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메뉴직원권한정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.메뉴정보", "메뉴")
                        .WithMany("메뉴직원권한목록")
                        .HasForeignKey("메뉴순번")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "직원")
                        .WithMany()
                        .HasForeignKey("회사코드", "직원사번");

                    b.Navigation("메뉴");

                    b.Navigation("직원");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메시지정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "메시지유형")
                        .WithMany()
                        .HasForeignKey("메시지유형코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "발송인")
                        .WithMany()
                        .HasForeignKey("회사코드", "발송인사번");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "수신인")
                        .WithMany()
                        .HasForeignKey("회사코드", "수신인사번");

                    b.Navigation("메시지유형");

                    b.Navigation("발송인");

                    b.Navigation("수신인");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.바코드발급정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "품목")
                        .WithMany()
                        .HasForeignKey("품목코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("품목");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서별수입검사", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서별품질검사장비", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.연동장비정보", "검사장비")
                        .WithMany()
                        .HasForeignKey("검사장비식별번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("검사장비");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서별품질검사정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "검사단위")
                        .WithMany()
                        .HasForeignKey("검사단위코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.품질검사정보", "품질검사")
                        .WithMany()
                        .HasForeignKey("품질검사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("검사단위");

                    b.Navigation("품질검사");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서별품질검사측정정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "검사단위")
                        .WithMany()
                        .HasForeignKey("검사단위코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품질검사정보", "품질검사")
                        .WithMany()
                        .HasForeignKey("품질검사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "보유품목")
                        .WithMany()
                        .HasForeignKey("보유품목회사코드", "보유품목코드1");

                    b.Navigation("검사단위");

                    b.Navigation("보유품목");

                    b.Navigation("품질검사");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.발주서헤더정보", "헤더정보")
                        .WithMany("발주서정보상세")
                        .HasForeignKey("회사코드", "발주번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("헤더정보");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.거래처정보", "거래처")
                        .WithMany()
                        .HasForeignKey("거래처회사코드", "거래처코드1");

                    b.Navigation("거래처");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주정보상세", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "품목구분")
                        .WithMany()
                        .HasForeignKey("품목구분코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "품목")
                        .WithMany()
                        .HasForeignKey("품목코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.발주정보", null)
                        .WithMany("S_발주정보상세")
                        .HasForeignKey("발주정보발주순번", "발주정보회사코드");

                    b.Navigation("품목");

                    b.Navigation("품목구분");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목검사정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "검사결과")
                        .WithMany()
                        .HasForeignKey("검사결과코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "불량유형")
                        .WithMany()
                        .HasForeignKey("불량유형코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품질검사정보", "품질검사")
                        .WithMany()
                        .HasForeignKey("품질검사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공정단위검사정보", "검사정보")
                        .WithMany()
                        .HasForeignKey("공정단위코드", "품질검사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "보유품목")
                        .WithMany()
                        .HasForeignKey("회사코드", "보유품목코드");

                    b.Navigation("검사결과");

                    b.Navigation("검사정보");

                    b.Navigation("보유품목");

                    b.Navigation("불량유형");

                    b.Navigation("품질검사");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목불량정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "불량유형")
                        .WithMany()
                        .HasForeignKey("불량유형코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "보유품목")
                        .WithMany()
                        .HasForeignKey("회사코드", "보유품목코드");

                    b.Navigation("보유품목");

                    b.Navigation("불량유형");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목삭제일지", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "보유품목")
                        .WithMany()
                        .HasForeignKey("회사코드", "보유품목코드");

                    b.Navigation("보유품목");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목위치정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", null)
                        .WithMany("보유품목위치모두")
                        .HasForeignKey("보유품목정보회사코드", "보유품목정보보유품목코드");

                    b.HasOne("HiSFS.Api.Shared.Models.위치상세정보", null)
                        .WithMany("보유품목위치모두")
                        .HasForeignKey("위치상세정보회사코드", "위치상세정보위치상세코드");

                    b.HasOne("HiSFS.Api.Shared.Models.장소위치정보", null)
                        .WithMany("보유품목위치모두")
                        .HasForeignKey("장소위치정보회사코드", "장소위치정보장소위치코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "보유품목")
                        .WithMany()
                        .HasForeignKey("회사코드", "보유품목코드");

                    b.HasOne("HiSFS.Api.Shared.Models.장소위치정보", "장소위치")
                        .WithMany()
                        .HasForeignKey("회사코드", "장소위치코드");

                    b.Navigation("보유품목");

                    b.Navigation("장소위치");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목이력", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "변경유형")
                        .WithMany()
                        .HasForeignKey("변경유형코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", null)
                        .WithMany("보유품목이력")
                        .HasForeignKey("보유품목정보회사코드", "보유품목정보보유품목코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "연계보유품목")
                        .WithMany()
                        .HasForeignKey("회사코드", "연계보유품목코드");

                    b.HasOne("HiSFS.Api.Shared.Models.장소위치정보", "위치")
                        .WithMany()
                        .HasForeignKey("회사코드", "장소위치코드");

                    b.HasOne("HiSFS.Api.Shared.Models.장소정보", "장소")
                        .WithMany()
                        .HasForeignKey("회사코드", "장소코드");

                    b.Navigation("변경유형");

                    b.Navigation("연계보유품목");

                    b.Navigation("위치");

                    b.Navigation("장소");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목일련정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.보유품목일지", "보유품목일지")
                        .WithMany()
                        .HasForeignKey("보유품목일지코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산지시정보", "생산지시")
                        .WithMany()
                        .HasForeignKey("생산지시코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "품목")
                        .WithMany()
                        .HasForeignKey("품목코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.거래처정보", "거래처")
                        .WithMany()
                        .HasForeignKey("거래처회사코드", "거래처코드1");

                    b.Navigation("거래처");

                    b.Navigation("보유품목일지");

                    b.Navigation("생산지시");

                    b.Navigation("품목");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목일지", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "품목")
                        .WithMany()
                        .HasForeignKey("품목코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.거래처정보", "거래처")
                        .WithMany()
                        .HasForeignKey("거래처회사코드", "거래처코드1");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "보유품목")
                        .WithMany()
                        .HasForeignKey("회사코드", "보유품목코드");

                    b.Navigation("거래처");

                    b.Navigation("보유품목");

                    b.Navigation("품목");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "품목구분")
                        .WithMany()
                        .HasForeignKey("품목구분코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "품목")
                        .WithMany()
                        .HasForeignKey("품목코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.설비가동현황정보", "설비가동현황")
                        .WithMany()
                        .HasForeignKey("설비가동현황회사코드", "설비가동현황코드");

                    b.HasOne("HiSFS.Api.Shared.Models.장소위치정보", "장소위치")
                        .WithMany()
                        .HasForeignKey("회사코드", "장소위치코드");

                    b.HasOne("HiSFS.Api.Shared.Models.장소정보", "장소")
                        .WithMany()
                        .HasForeignKey("회사코드", "장소코드");

                    b.Navigation("설비가동현황");

                    b.Navigation("장소");

                    b.Navigation("장소위치");

                    b.Navigation("품목");

                    b.Navigation("품목구분");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.부서정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획구매정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "검토자")
                        .WithMany()
                        .HasForeignKey("회사코드", "검토자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "계획자")
                        .WithMany()
                        .HasForeignKey("회사코드", "계획자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획정보", "생산계획")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산계획코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("검토자");

                    b.Navigation("계획자");

                    b.Navigation("생산계획");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획기본정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "검토자")
                        .WithMany()
                        .HasForeignKey("회사코드", "검토자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "계획자")
                        .WithMany()
                        .HasForeignKey("회사코드", "계획자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획정보", "생산계획")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산계획코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("검토자");

                    b.Navigation("계획자");

                    b.Navigation("생산계획");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획생산관리정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "검토자")
                        .WithMany()
                        .HasForeignKey("회사코드", "검토자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "계획자")
                        .WithMany()
                        .HasForeignKey("회사코드", "계획자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획정보", "생산계획")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산계획코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("검토자");

                    b.Navigation("계획자");

                    b.Navigation("생산계획");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획생산정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "검토자")
                        .WithMany()
                        .HasForeignKey("회사코드", "검토자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "계획자")
                        .WithMany()
                        .HasForeignKey("회사코드", "계획자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획정보", "생산계획")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산계획코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("검토자");

                    b.Navigation("계획자");

                    b.Navigation("생산계획");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획연구소정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "검토자")
                        .WithMany()
                        .HasForeignKey("회사코드", "검토자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "계획자")
                        .WithMany()
                        .HasForeignKey("회사코드", "계획자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획정보", "생산계획")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산계획코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("검토자");

                    b.Navigation("계획자");

                    b.Navigation("생산계획");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획영업정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "검토자")
                        .WithMany()
                        .HasForeignKey("회사코드", "검토자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "계획자")
                        .WithMany()
                        .HasForeignKey("회사코드", "계획자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획정보", "생산계획")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산계획코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("검토자");

                    b.Navigation("계획자");

                    b.Navigation("생산계획");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "생산계획상태")
                        .WithMany()
                        .HasForeignKey("생산계획상태코드")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "생산유형")
                        .WithMany()
                        .HasForeignKey("생산유형코드")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HiSFS.Api.Shared.Models.생산품공정정보", "생산품공정")
                        .WithMany()
                        .HasForeignKey("생산품공정코드")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "생산품")
                        .WithMany()
                        .HasForeignKey("생산품코드")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.거래처정보", "발주처")
                        .WithMany()
                        .HasForeignKey("발주처회사코드", "발주처거래처코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획구매정보", "생산계획구매")
                        .WithMany()
                        .HasForeignKey("생산계획구매회사코드", "생산계획구매생산계획코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획기본정보", "생산계획기본")
                        .WithMany()
                        .HasForeignKey("생산계획기본회사코드", "생산계획기본생산계획코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획생산관리정보", "생산계획생산관리")
                        .WithMany()
                        .HasForeignKey("생산계획생산관리회사코드", "생산계획생산관리생산계획코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획생산정보", "생산계획생산")
                        .WithMany()
                        .HasForeignKey("생산계획생산회사코드", "생산계획생산생산계획코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획연구소정보", "생산계획연구소")
                        .WithMany()
                        .HasForeignKey("생산계획연구소회사코드", "생산계획연구소생산계획코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획영업정보", "생산계획영업")
                        .WithMany()
                        .HasForeignKey("생산계획영업회사코드", "생산계획영업생산계획코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획품질정보", "생산계획품질")
                        .WithMany()
                        .HasForeignKey("생산계획품질회사코드", "생산계획품질생산계획코드");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "생산책임자")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산책임자사번")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("발주처");

                    b.Navigation("생산계획구매");

                    b.Navigation("생산계획기본");

                    b.Navigation("생산계획상태");

                    b.Navigation("생산계획생산");

                    b.Navigation("생산계획생산관리");

                    b.Navigation("생산계획연구소");

                    b.Navigation("생산계획영업");

                    b.Navigation("생산계획품질");

                    b.Navigation("생산유형");

                    b.Navigation("생산책임자");

                    b.Navigation("생산품");

                    b.Navigation("생산품공정");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획품질정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "검토자")
                        .WithMany()
                        .HasForeignKey("회사코드", "검토자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "계획자")
                        .WithMany()
                        .HasForeignKey("회사코드", "계획자사번");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획정보", "생산계획")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산계획코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("검토자");

                    b.Navigation("계획자");

                    b.Navigation("생산계획");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산실적상세정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.생산실적헤더정보", "생산실적헤더")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산지시코드")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "작업자")
                        .WithMany()
                        .HasForeignKey("회사코드", "작업자사번")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("생산실적헤더");

                    b.Navigation("작업자");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산실적헤더정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공정단위정보", "공정단위")
                        .WithMany()
                        .HasForeignKey("공정단위코드")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HiSFS.Api.Shared.Models.생산품공정정보", "생산품공정")
                        .WithMany()
                        .HasForeignKey("생산품공정코드")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "생산품")
                        .WithMany()
                        .HasForeignKey("생산품코드")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("공정단위");

                    b.Navigation("생산품");

                    b.Navigation("생산품공정");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산지시공정차수정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.생산지시정보", "생산지시")
                        .WithMany("생산지시공정차수목록")
                        .HasForeignKey("생산지시코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산품공정차수정보", "생산품공정차수")
                        .WithMany()
                        .HasForeignKey("생산품공정코드", "생산품공정차수순번");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "작업자")
                        .WithMany()
                        .HasForeignKey("회사코드", "작업자사번");

                    b.Navigation("생산지시");

                    b.Navigation("생산품공정차수");

                    b.Navigation("작업자");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산지시정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "생산지시유형")
                        .WithMany()
                        .HasForeignKey("생산지시유형코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "실행상태")
                        .WithMany()
                        .HasForeignKey("실행상태코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획정보", null)
                        .WithMany("생산지시목록")
                        .HasForeignKey("생산계획정보회사코드", "생산계획정보생산계획코드");

                    b.HasOne("HiSFS.Api.Shared.Models.생산계획정보", "생산계획")
                        .WithMany()
                        .HasForeignKey("회사코드", "생산계획코드");

                    b.Navigation("생산계획");

                    b.Navigation("생산지시유형");

                    b.Navigation("실행상태");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산품공정정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.품목정보", "생산품")
                        .WithMany()
                        .HasForeignKey("생산품코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("생산품");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산품공정차수정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공정단위정보", null)
                        .WithMany("생산품공정차수목록")
                        .HasForeignKey("공정단위정보공정단위코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공정단위정보", "공정단위")
                        .WithMany()
                        .HasForeignKey("공정단위코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.생산품공정정보", "생산품공정")
                        .WithMany("생산품공정차수목록")
                        .HasForeignKey("생산품공정코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("공정단위");

                    b.Navigation("생산품공정");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.설비가동현황정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "상태유형")
                        .WithMany()
                        .HasForeignKey("상태유형코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "설비")
                        .WithMany()
                        .HasForeignKey("회사코드", "설비코드");

                    b.Navigation("상태유형");

                    b.Navigation("설비");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.액션로그", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.액션정보", "액션")
                        .WithMany()
                        .HasForeignKey("액션코드");

                    b.HasOne("HiSFS.Api.Shared.Models.연동장비정보", "연동장비")
                        .WithMany()
                        .HasForeignKey("연동장비식별번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "직원")
                        .WithMany()
                        .HasForeignKey("회사코드", "직원사번");

                    b.Navigation("액션");

                    b.Navigation("연동장비");

                    b.Navigation("직원");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.액션정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.액션정보", "대체액션")
                        .WithMany()
                        .HasForeignKey("대체액션코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "액션유형")
                        .WithMany()
                        .HasForeignKey("액션유형코드");

                    b.Navigation("대체액션");

                    b.Navigation("액션유형");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.연동장비정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "연동장비유형")
                        .WithMany()
                        .HasForeignKey("연동장비유형코드");

                    b.Navigation("연동장비유형");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주작업지시서정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.외주작업지시헤더정보", "외주작업지시헤더")
                        .WithMany("외주작업지시서상세")
                        .HasForeignKey("회사코드", "지시번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("외주작업지시헤더");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주작업지시서품검정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주지시별검사정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "검사단위")
                        .WithMany()
                        .HasForeignKey("검사단위코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.품질검사정보", "품질검사")
                        .WithMany()
                        .HasForeignKey("품질검사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("검사단위");

                    b.Navigation("품질검사");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주지시별품질검사장비", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.연동장비정보", "검사장비")
                        .WithMany()
                        .HasForeignKey("검사장비식별번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.외주지시별검사정보", "검사정보")
                        .WithMany("외주지시별품질검사장비목록")
                        .HasForeignKey("지시번호", "품질검사코드");

                    b.Navigation("검사장비");

                    b.Navigation("검사정보");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주품질검사측정정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "검사단위")
                        .WithMany()
                        .HasForeignKey("검사단위코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품질검사정보", "품질검사")
                        .WithMany()
                        .HasForeignKey("품질검사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.보유품목정보", "보유품목")
                        .WithMany()
                        .HasForeignKey("보유품목회사코드", "보유품목코드1");

                    b.Navigation("검사단위");

                    b.Navigation("보유품목");

                    b.Navigation("품질검사");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.위치상세정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "위치상세분류")
                        .WithMany()
                        .HasForeignKey("위치상세분류코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.장소위치정보", "장소위치")
                        .WithMany("위치상세목록")
                        .HasForeignKey("회사코드", "장소위치코드");

                    b.Navigation("위치상세분류");

                    b.Navigation("장소위치");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.일괄생산실적상세정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.일괄생산실적헤더정보", "일괄생산실적헤더")
                        .WithMany()
                        .HasForeignKey("회사코드", "작업번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("일괄생산실적헤더");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.입고처리상세정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.입고처리헤더정보", "입고처리헤더")
                        .WithMany()
                        .HasForeignKey("회사코드", "작업번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("입고처리헤더");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.작업자생산실적정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.직원정보", "작업자")
                        .WithMany()
                        .HasForeignKey("회사코드", "작업자사번");

                    b.Navigation("작업자");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.장소위치정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "위치분류")
                        .WithMany()
                        .HasForeignKey("위치분류코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.장소정보", "장소")
                        .WithMany("장소위치목록")
                        .HasForeignKey("회사코드", "장소코드");

                    b.Navigation("위치분류");

                    b.Navigation("장소");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.장소정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "공정구분")
                        .WithMany()
                        .HasForeignKey("공정구분코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "장소유형")
                        .WithMany()
                        .HasForeignKey("장소유형코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("공정구분");

                    b.Navigation("장소유형");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.재고이동상세정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.재고이동헤더정보", "재고이동헤더")
                        .WithMany()
                        .HasForeignKey("회사코드", "작업번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("재고이동헤더");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.재고조정품목정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "규격종류")
                        .WithMany()
                        .HasForeignKey("규격종류코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "단위")
                        .WithMany()
                        .HasForeignKey("단위코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "소재")
                        .WithMany()
                        .HasForeignKey("소재코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "조달구분")
                        .WithMany()
                        .HasForeignKey("조달구분코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "품목구분")
                        .WithMany()
                        .HasForeignKey("품목구분코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "품목유형")
                        .WithMany()
                        .HasForeignKey("품목유형코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.거래처정보", "거래처")
                        .WithMany()
                        .HasForeignKey("거래처회사코드", "거래처코드1");

                    b.Navigation("거래처");

                    b.Navigation("규격종류");

                    b.Navigation("단위");

                    b.Navigation("소재");

                    b.Navigation("조달구분");

                    b.Navigation("품목구분");

                    b.Navigation("품목유형");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.주문서정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.주문서헤더정보", "헤더정보")
                        .WithMany("주문서정보상세")
                        .HasForeignKey("회사코드", "주문번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("헤더정보");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.직원권한정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.직원정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "권한")
                        .WithMany()
                        .HasForeignKey("권한코드");

                    b.HasOne("HiSFS.Api.Shared.Models.직원권한정보", "권한정보")
                        .WithMany()
                        .HasForeignKey("식별인자")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "직급")
                        .WithMany()
                        .HasForeignKey("직급코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "직책")
                        .WithMany()
                        .HasForeignKey("직책코드");

                    b.HasOne("HiSFS.Api.Shared.Models.부서정보", "부서")
                        .WithMany()
                        .HasForeignKey("회사코드", "부서코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("권한");

                    b.Navigation("권한정보");

                    b.Navigation("부서");

                    b.Navigation("직급");

                    b.Navigation("직책");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.출고처리상세정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.출고처리헤더정보", "출고처리헤더")
                        .WithMany()
                        .HasForeignKey("회사코드", "작업번호")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("출고처리헤더");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.파일정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.파일폴더정보", "폴더")
                        .WithMany("파일목록")
                        .HasForeignKey("폴더순번")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("폴더");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.품목정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "규격종류")
                        .WithMany()
                        .HasForeignKey("규격종류코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "단위")
                        .WithMany()
                        .HasForeignKey("단위코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "소재")
                        .WithMany()
                        .HasForeignKey("소재코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "조달구분")
                        .WithMany()
                        .HasForeignKey("조달구분코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "품목구분")
                        .WithMany()
                        .HasForeignKey("품목구분코드");

                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "품목유형")
                        .WithMany()
                        .HasForeignKey("품목유형코드");

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.HasOne("HiSFS.Api.Shared.Models.거래처정보", "거래처")
                        .WithMany()
                        .HasForeignKey("거래처회사코드", "거래처코드1");

                    b.Navigation("거래처");

                    b.Navigation("규격종류");

                    b.Navigation("단위");

                    b.Navigation("소재");

                    b.Navigation("조달구분");

                    b.Navigation("품목구분");

                    b.Navigation("품목유형");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.품질검사측정정보", b =>
                {
                    b.HasOne("HiSFS.Api.Shared.Models.공통코드", "검사단위")
                        .WithMany()
                        .HasForeignKey("검사단위코드");

                    b.HasOne("HiSFS.Api.Shared.Models.품질검사정보", "품질검사")
                        .WithMany()
                        .HasForeignKey("품질검사코드")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HiSFS.Api.Shared.Models.사업장", "회사")
                        .WithMany()
                        .HasForeignKey("회사코드");

                    b.Navigation("검사단위");

                    b.Navigation("품질검사");

                    b.Navigation("회사");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.BOM정보", b =>
                {
                    b.Navigation("하위BOM목록");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.BOM품목정보", b =>
                {
                    b.Navigation("S_BOM정보상세");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위검사정보", b =>
                {
                    b.Navigation("공정검사장비목록");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공정단위정보", b =>
                {
                    b.Navigation("공정검사목록");

                    b.Navigation("공정설비목록");

                    b.Navigation("공정자재목록");

                    b.Navigation("생산품공정차수목록");

                    b.Navigation("S_BOM품목정보상세");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.공통코드", b =>
                {
                    b.Navigation("하위");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.메뉴정보", b =>
                {
                    b.Navigation("메뉴부서권한목록");

                    b.Navigation("메뉴유형별권한목록");

                    b.Navigation("메뉴직원권한목록");

                    b.Navigation("하위메뉴목록");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주서헤더정보", b =>
                {
                    b.Navigation("발주서정보상세");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.발주정보", b =>
                {
                    b.Navigation("S_발주정보상세");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.보유품목정보", b =>
                {
                    b.Navigation("보유품목위치모두");

                    b.Navigation("보유품목이력");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산계획정보", b =>
                {
                    b.Navigation("생산지시목록");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산지시정보", b =>
                {
                    b.Navigation("생산지시공정차수목록");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.생산품공정정보", b =>
                {
                    b.Navigation("생산품공정차수목록");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주작업지시헤더정보", b =>
                {
                    b.Navigation("외주작업지시서상세");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.외주지시별검사정보", b =>
                {
                    b.Navigation("외주지시별품질검사장비목록");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.위치상세정보", b =>
                {
                    b.Navigation("보유품목위치모두");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.장소위치정보", b =>
                {
                    b.Navigation("보유품목위치모두");

                    b.Navigation("위치상세목록");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.장소정보", b =>
                {
                    b.Navigation("장소위치목록");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.주문서헤더정보", b =>
                {
                    b.Navigation("주문서정보상세");
                });

            modelBuilder.Entity("HiSFS.Api.Shared.Models.파일폴더정보", b =>
                {
                    b.Navigation("파일목록");
                });
#pragma warning restore 612, 618
        }
    }
}
