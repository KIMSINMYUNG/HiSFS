@inherits CustomComponent
@page "/mm/mio/작업외주생산실적등록"
@using HiSFS.Api.Shared.Models.View_DZICUBE
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups

@*<SfGrid @ref="grid1" DataSource="@list1" AllowPaging="true" Toolbar="@(new string[] {"Add","Cancel" })" AllowExcelExport=@(allowExcelExport) AllowFiltering="true">*@
    <SfGrid @ref="grid1" DataSource="@list1" AllowPaging="true"  AllowExcelExport=@(allowExcelExport) AllowFiltering="true">
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
        <GridEvents OnActionComplete="ActionCompleteHandler" TValue="작업외주생산실적등록정보" Created="RefreshAsync" RowSelected="OnRowSelected"></GridEvents>
        <GridEditSettings AllowAdding="true" AllowEditing="false" AllowDeleting="false" Mode="@Syncfusion.Blazor.Grids.EditMode.Dialog" Dialog="DialogParams" NewRowPosition="NewRowPosition.Bottom">
            <Template>
                @{
                    var 헤더 = (context as 작업외주생산실적등록정보);
                }
                <div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <SfTextBox ID="회사코드" @bind-Value="@(회사코드)" FloatLabelType="FloatLabelType.Always" Placeholder="회사코드" Enabled="@회사코드Check"></SfTextBox>
                        </div>
                        <div class="form-group col-md-6">
                            <SfTextBox ID="사업장코드" @bind-Value="@(헤더.사업장코드)" FloatLabelType="FloatLabelType.Always" Placeholder="사업장코드" Enabled="false"></SfTextBox>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @*<SfTextBox ID="회사코드" @bind-Value="@(헤더.회사코드)" FloatLabelType="FloatLabelType.Always" Placeholder="회사코드" Enabled="@회사코드Check"></SfTextBox>*@
                            <SfTextBox ID="작업번호" @bind-Value="@(헤더.작업번호)" FloatLabelType="FloatLabelType.Always" Placeholder="작업번호" Enabled="@작업번호Check"></SfTextBox>
                        </div>
                        <div class="form-group col-md-6">
                            <SfDatePicker ID="작업일자" @bind-Value="@(헤더.작업일자)" FloatLabelType="FloatLabelType.Always" Placeholder="작업일자" required>
                            </SfDatePicker>
                        </div>
                    </div>


                    <div class="form-row">
                        <div class="form-group col-md-6">

                            <SfComboBox TValue="string" TItem="직원정보" @bind-Value="@(헤더.사원코드)" PopupWidth="300px" DataSource="@직원정보List" PopupHeight="400px" CssClass="e-multi-column" Placeholder="사원코드" AllowFiltering="true">
                                <ComboBoxTemplates TItem="직원정보">
                                    <HeaderTemplate>
                                        <table><tr><th class="e-text-center">사번</th><th width="100px">사용자명</th><th width="100px">부서코드</th></tr></table>
                                    </HeaderTemplate>
                                    <ItemTemplate Context="anotherContext">
                                        @{
                                            var 직원정보 = (anotherContext as 직원정보);
                                        }
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>@직원정보.사번</td>
                                                    <td>@직원정보.사용자명</td>
                                                    <td>@직원정보.부서코드</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </ItemTemplate>
                                </ComboBoxTemplates>
                                <ComboBoxFieldSettings Text="사용자명" Value="사번"></ComboBoxFieldSettings>
                            </SfComboBox>
                        </div>
                        <div class="form-group col-md-6">
                            <SfComboBox TValue="string" TItem="부서정보" @bind-Value="@(헤더.부서코드)" PopupWidth="400px" DataSource="@부서정보List" PopupHeight="400px" CssClass="e-multi-column" Placeholder="부서코드" AllowFiltering="true">
                                <ComboBoxTemplates TItem="부서정보">
                                    <HeaderTemplate>
                                        <table>
                                            <tr>
                                                <th width="100px">부서코드</th>
                                                <th width="100px">부서명</th>
                                                <th width="100px">부문코드</th>
                                                <th width="100px">부문명</th>
                                            </tr>
                                        </table>
                                    </HeaderTemplate>
                                    <ItemTemplate Context="anotherContext">
                                        @{
                                            var 부서 = (anotherContext as 부서정보);
                                        }
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>@부서.부서코드</td>
                                                    <td>@부서.부서명</td>
                                                    <td>@부서.부문코드</td>
                                                    <td>@부서.부문명</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </ItemTemplate>
                                </ComboBoxTemplates>
                                <ComboBoxFieldSettings Text="부서코드" Value="부서코드"></ComboBoxFieldSettings>
                            </SfComboBox>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <SfDatePicker ID="실적일자" @bind-Value="@(헤더.실적일자)" FloatLabelType="FloatLabelType.Always" Placeholder="실적일자">
                            </SfDatePicker>
                        </div>
                        <div class="form-group col-md-6">
                            @*<SfNumericTextBox FloatLabelType="FloatLabelType.Always" TValue="Decimal" Placeholder="실적수량" Value=@(실적수량) Enabled="false" />*@
                        </div>
                    </div>

                    @*<div class="form-row">
                            <div class="form-group col-md-6">
                                <SfDropDownList  ID="처리구분" TItem="처리구분필드" Value="@(처리구분)" TValue="string" DataSource="@list처리구분" FloatLabelType="FloatLabelType.Always" Placeholder="처리구분"  Enabled="false">
                                    <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                                </SfDropDownList>
                            </div>
                            <div class="form-group col-md-6">
                            </div>
                        </div>*@

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <DInputSearch Placeholder="지시번호" Target="#main" DialogHeader="지시번호" TValue="외주작업지시서정보" TCode="string" TextField="지시번호" ValueChanged=@(지시번호Changed) CodeField="지시번호" @bind-Code=@(헤더.지시번호)>
                                <DialogContent>
                                    <HiSFS.WebApp.Pages.Common.Popup.외주지시Popup />
                                </DialogContent>
                            </DInputSearch>
                        </div>
                        <div class="form-group col-md-6">
                            @*<SfNumericTextBox FloatLabelType="FloatLabelType.Always" TValue="Decimal?" Placeholder="지시전개순번" Value=@(전개순번) Enabled="false" />*@

                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <DInputSearch Placeholder="이동공정/입고창고코드" Target="#main" DialogHeader="이동공정/입고창고코드" TValue="장소위치정보" TCode="string" TextField="장소코드" @bind-Value="이동공정_입고창고코드Selected" CodeField="장소코드" @bind-Code=@(헤더.이동공정_입고창고코드)>
                                <DialogContent>
                                    <HiSFS.WebApp.Pages.Common.Popup.장소위치Popup />
                                </DialogContent>
                            </DInputSearch>
                        </div>
                        <div class="form-group col-md-6">
                            <DInputSearch Placeholder="이동작업장/입고장소코드" Target="#main" DialogHeader="이동작업장/입고장소코드" TValue="장소위치정보" TCode="string" TextField="위치코드" @bind-Value="이동작업장_입고장소코드Selected" CodeField="위치코드" @bind-Code=@(헤더.이동작업장_입고장소코드)>
                                <DialogContent>
                                    <HiSFS.WebApp.Pages.Common.Popup.장소위치Popup />
                                </DialogContent>
                            </DInputSearch>
                        </div>
                    </div>


                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <SfDropDownList ID="재작업여부" TItem="재작업필드" @bind-Value="@(헤더.재작업여부)" TValue="string" DataSource="@list재작업여부" FloatLabelType="FloatLabelType.Always" Placeholder="재작업여부">
                                <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </div>
                        <div class="form-group col-md-6">
                            <SfDropDownList ID="실적구분" TItem="실적구분필드" @bind-Value="@(헤더.실적구분)" TValue="string" DataSource="@list실적구분" FloatLabelType="FloatLabelType.Always" Placeholder="실적구분">
                                <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                            </SfDropDownList>

                        </div>
                    </div>




                </div>
            </Template>
        </GridEditSettings>
        <GridColumns>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.회사코드) HeaderText="회사코드" IsPrimaryKey="true" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center" Width="140"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.사업장코드) HeaderText="사업장코드" Width="100" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.작업번호) HeaderText="작업번호" IsPrimaryKey="true" Width="150" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.부서코드) HeaderText="부서코드" Width="100" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.사원코드) HeaderText="사원코드" Width="100" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.실적번호) HeaderText="실적번호" Width="100" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.실적일자) HeaderText="실적일자" Width="100" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.처리구분) HeaderText="처리구분" Width="150" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.지시구분명) HeaderText="지시구분명" Width="150" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.지시번호) HeaderText="지시번호" Width="150" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.지시전개순번) HeaderText="지시전개순번" Width="150" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>

            <GridColumn Field=@nameof(작업외주생산실적등록정보.실적공정코드) HeaderText="실적공정코드" Width="120" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.실적작업장코드) HeaderText="이동작업장/입고장소코드" Width="120" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>

            <GridColumn Field=@nameof(작업외주생산실적등록정보.이동공정_입고창고코드) HeaderText="이동공정/입고창고코드" Width="120" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.이동작업장_입고장소코드) HeaderText="이동작업장/입고장소코드" Width="120" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.재작업여부) HeaderText="재작업여부" Width="120" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>

            <GridColumn Field=@nameof(작업외주생산실적등록정보.실적구분) HeaderText="실적구분" Width="150" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>
            <GridColumn Field=@nameof(작업외주생산실적등록정보.실적수량) HeaderText="실적수량" Width="150" TextAlign="@TextAlign.Center" HeaderTextAlign="@TextAlign.Center"></GridColumn>

        </GridColumns>
    </SfGrid>



    @code {

        private bool allowExcelExport = true;

        public List<작업외주생산실적등록정보> list1 { get; set; }
        private SfGrid<작업외주생산실적등록정보> grid1;


        public List<직원정보> 직원정보List { get; set; }
        public List<부서정보> 부서정보List { get; set; }


        private 장소위치정보 이동공정_입고창고코드Selected { get; set; }
        private 장소위치정보 이동작업장_입고장소코드Selected { get; set; }


        private 품목정보 품목코드Selected { get; set; }


        private 외주작업지시서정보 지시번호Selected { get; set; }

        private Boolean 회사코드Check = false, 작업번호Check = false, 출고장소Check = true, 입고고장소Check = true;

        private Boolean Check = false;

        private DialogSettings DialogParams = new DialogSettings { MinHeight = "400px", Width = "450px" };

        private string 회사코드 = "";
        private string 작업번호 = "";
        private string 처리구분 = "";
        private string 실적공정코드 = "";
        private string 실적작업장코드 = "";
        private string 지시구분명 = "";


        public Decimal 전개순번 { get; set; }
        public Decimal 실적수량 { get; set; }

        public async Task 지시번호Changed(외주작업지시서정보 value)
        {
            전개순번 = value.전개순번;
            실적수량 = value.수량;
            처리구분 = value.처리구분;
            실적공정코드 = value.공정;
            실적작업장코드 = value.작업장;
            지시구분명 = value.지시구분명;

        }



        public class 재작업필드
        {
            public int ID { get; set; }
            public string Text { get; set; }
        }
        public List<재작업필드> list재작업여부 = new List<재작업필드>() {
        new 재작업필드(){ ID=0, Text="정상작업"},
        new 재작업필드(){ ID=1, Text="재작업"},
    };

        public class 실적구분필드
        {
            public int ID { get; set; }
            public string Text { get; set; }
        }
        public List<실적구분필드> list실적구분 = new List<실적구분필드>() {
        new 실적구분필드(){ ID=0, Text="적합"},
        new 실적구분필드(){ ID=1, Text="부적합"},
    };


        public class 처리구분필드
        {
            public int ID { get; set; }
            public string Text { get; set; }
        }
        public List<처리구분필드> list처리구분 = new List<처리구분필드>() {
        new 처리구분필드(){ ID=0, Text="이동"},
        new 처리구분필드(){ ID=1, Text="입고"},
    };

        protected async override void OnInitialized()
        {
            회사코드 = await SessionStorage.GetAsync<string>("회사코드");
            var result = await this.Remote.Command.기준정보.직원_조회(true, 회사코드);
            직원정보List = result.ToList();

            var result2 = await Remote.Command.기준정보.부서정보_조회(회사코드);
            부서정보List = result2.ToList();
        }

        async Task RefreshAsync()
        {
            회사코드 = await SessionStorage.GetAsync<string>("회사코드");

            var result = await Remote.Command.기준정보.MES생산관리_작업외주생산실적등록정보_조회(회사코드);

            list1 = result.ToList();

            StateHasChanged();

        }
        private async Task OnRowSelected(RowSelectEventArgs<작업외주생산실적등록정보> e)
        {
            작업번호 = e.Data.작업번호;
            //회사코드 = e.Data.회사코드;

        }

        private void OnActionBegin(ActionEventArgs<일괄생산실적상세정보> args)
        {
            //await Task.Yield();

            if (args.RequestType == Syncfusion.Blazor.Grids.Action.Add)
            {
                var parentRow = grid1.SelectedRecords.FirstOrDefault();
                if (parentRow == null)
                {
                    args.Cancel = true;
                    return;
                }
            }
        }

        public async Task ActionCompleteHandler(ActionEventArgs<작업외주생산실적등록정보> args)
        {
            if (args.RequestType.ToString() == "Add")
            {
                Check = true;
            }
            if (args.RequestType.ToString() == "Save")
            {
                var newRow = args.Data;
                newRow.회사코드 = 회사코드;
                newRow.사업장코드 = "1000";
                newRow.지시전개순번 = 전개순번;
                newRow.실적수량 = 실적수량;
                newRow.처리구분 = 처리구분;
                newRow.실적공정코드 = 실적공정코드;
                newRow.실적작업장코드 = 실적작업장코드;
                newRow.지시구분명 = 지시구분명;

                if (newRow.처리구분.Equals("1"))
                {
                }

                await Remote.Command.기준정보.MES생산실적_작업외주생산실적등록정보_등록(newRow, args.Action == "Add" ? true : false);

                await RefreshAsync();

            }
            else
            {
                Check = false;
            }
        }


        protected override void OnDispose()
        {
            //throw new NotImplementedException();
        }
    }
