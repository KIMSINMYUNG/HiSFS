@page "/dz/품목view"
@using HiSFS.Api.Shared.Models.View_DZICUBE
@inherits CustomComponent

<SfSplitter Width="100%" Height="100%" Orientation="Syncfusion.Blazor.Layouts.Orientation.Horizontal" SeparatorSize="6">
    <SplitterPanes>
        <SplitterPane Size="100%" Collapsible="true">
            <SfTab CssClass="h-100" LoadOn="ContentLoad.Demand" OverflowMode="OverflowMode.Scrollable" HeaderPlacement="HeaderPosition.Top">
                <FGrid @ref="grid" DataSource="@list" TValue="VL_MES_ITEM" DefaultMode="true" EditMode="DGridEditMode.EditDelete" PageSize="15"
                       OnCreated="RefreshAsync"  OnToolbarClick="OnToolbarClick">
                    <GridColumns>
                        <GridColumn Field=@nameof(VL_MES_ITEM.CO_CD) HeaderText="회사코드" />
                        <GridColumn Field=@nameof(VL_MES_ITEM.ITEM_CD) HeaderText="품번" />
                        <GridColumn Field=@nameof(VL_MES_ITEM.ITEM_NM) HeaderText="품명" />
                        <GridColumn Field=@nameof(VL_MES_ITEM.ITEM_DC) HeaderText="규격" />
                        <GridColumn Field=@nameof(VL_MES_ITEM.ACCT_FG) HeaderText="계정구분" />
                        <GridColumn Field=@nameof(VL_MES_ITEM.ACCT_FG_NM) HeaderText="계정구분명" />
                        <GridColumn Field=@nameof(VL_MES_ITEM.ODR_FG) HeaderText="조달구분" />
                        <GridColumn Field=@nameof(VL_MES_ITEM.ODR_FG_NM) HeaderText="조달구분명" />
                        <GridColumn Field=@nameof(VL_MES_ITEM.UNIT_DC) HeaderText="재고단위" />
                        <GridColumn Field=@nameof(VL_MES_ITEM.LOT_FG) HeaderText="LOT여부" />
                    </GridColumns>
                </FGrid>
            </SfTab>
        </SplitterPane>
    </SplitterPanes>
</SfSplitter>

@code {
    private FGrid<VL_MES_ITEM> grid;
    private List<VL_MES_ITEM> list;
    private VL_MES_ITEM selectedRow;

    private async Task RefreshAsync()
    {
        list?.Clear();

        StateHasChanged();

        //품목VIEW
        var result = await Remote.Command.기준정보.VL_MES_ITEM();

        list = result.ToList();

        StateHasChanged();
    }

    private async Task OnToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "btnCheckSave")
        {
            var YesOrNo = await ShowMessageBox("품목반영", "품목정보를 반영하시겠습니까?", MessageBoxResultType.YesOrNo);
            bool result = false;
            if (YesOrNo)
            {
                result = await Remote.Command.기준정보.VL_MES_ITEM_반영(list);

                if (result)
                    NotifyMessage(Message.반영성공);
                else
                    NotifyMessage(Message.반영실패);
            }

        }

    }

    protected override void OnDispose()
    {
    }
}
